
== Configuring a NFS-GANESHA server for a native use of XFS or LUSTRE ==

NFS-GANESHA has different beckoned modules, each of them dedicated to address a specific namespace. These bookends are called FSAL (which stands for "File System Abstraction Layer"). Within the available FSALs, the FSAL_LUSTRE and FSAL_XFS are dedicated respectively to LUSTRE and XFS. They use specific features of theses two files systems that allow them to be address from user space through a handle based logic (using the "LUSTRE API" and the "XFS Lib Handle" from xfsprogs package)
The configuration should be done like this:

=== Compiling NFS-GANESHA with the FSAL_LUSTRE ===
This is very simple, just proceed as follow:
<pre>
# ./configure --with-fsal=LUSTRE
# make
# make install
</pre>

=== Compiling NFS-GANESHA with the FSAL_XFS ===

This is very simple too: this time you should do this
<pre>
# ./configure --with-fsal=XFS
# make
# make install
</pre>

This will produce the binaries lustre.ganesha.nfsd and lustre.ganeshell or xfs.ganesha.nfsd and xfs.ganeshell


=== Configuring the specific stuff for FSAL_XFS and FSAL_LUSTRE ===
And... Well... That's all !!! There is no specific Stuff to be set in the configuration for XFS or LUSTRE. Just export the path in a 'EXPORT' block. Nothing else is to be set. The program will check in /etc/mtab to verify if the exported path is actually within a XFS or a LUSTRE filesystem one and will get the information on it from there.

You may want, through the export NFS mount point, to get access to the XattrD feature (basically accessing object extended attributes via NFS). In LUSTRE and XFS, user defined attributes can be created, set, modified and used. To enable this, make sure the local file system that you want to export via nfs-ganesha is user attributes ready and is mounted this way (it should have the user_attr option enabled). If not, you'll get EPERM errors.


